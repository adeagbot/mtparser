<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="mtparser">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../scalaIDE/eclipse/"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <path id="Scala Library container [ 2.11.7 ].libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}plugins/org.scala-lang.scala-library_2.11.7.v20150622-112736-1fbce4612c.jar"/>
        <pathelement location="${ECLIPSE_HOME}plugins/org.scala-lang.scala-reflect_2.11.7.v20150622-112736-1fbce4612c.jar"/>
        <pathelement location="${ECLIPSE_HOME}plugins/org.scala-lang.scala-actors_2.11.7.v20150622-112736-1fbce4612c.jar"/>
    </path>
    <path id="mtparser.classpath">
        <pathelement location="bin"/>
        <path refid="Scala Library container [ 2.11.7 ].libraryclasspath"/>
        <pathelement location="../../../.m2/repository/org/slf4j/slf4j-api/1.7.21/slf4j-api-1.7.21.jar"/>
        <pathelement location="../../../.m2/repository/ch/qos/logback/logback-classic/1.1.5/logback-classic-1.1.5.jar"/>
        <pathelement location="../../../.m2/repository/ch/qos/logback/logback-core/1.1.5/logback-core-1.1.5.jar"/>
        <pathelement location="../../../.m2/repository/com/typesafe/scala-logging/scala-logging_2.11/3.4.0/scala-logging_2.11-3.4.0.jar"/>
    </path>
    <path id="run.MTParser.bootclasspath">
        <path refid="Scala Library container [ 2.11.7 ].libraryclasspath"/>
        <fileset dir="${java.home}/lib" includes="*.jar"/>
        <fileset dir="${java.home}/lib/ext" includes="*.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
                <exclude name="gmg/main/resources/"/>
                <exclude name="main/resources/"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src/main/resources">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <src path="src/main/resources"/>
            <exclude name="gmg/main/resources/"/>
            <exclude name="main/resources/"/>
            <classpath refid="mtparser.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="MTParser">
        <java classname="main.java.Runner" failonerror="true" fork="yes">
            <jvmarg line="-Dscala.concurrent.context.numThreads=8"/>
            <arg line="US&#13;&#10;C:\Users\terry.adeagbo\Documents\workspace\mtparser\test&#13;&#10;D:\output\parser&#13;&#10;D:\output\logs&#13;&#10;C:\Users\terry.adeagbo\Documents\workspace\mtparser\bic.txt&#13;&#10;C:\Users\terry.adeagbo\Documents\workspace\mtparser\country.txt&#13;&#10;C:\Users\terry.adeagbo\Documents\workspace\mtparser\scope.txt&#13;&#10;C:\Users\terry.adeagbo\Documents\workspace\mtparser\region.txt"/>
            <classpath refid="mtparser.classpath"/>
            <bootclasspath>
                <path refid="run.MTParser.bootclasspath"/>
            </bootclasspath>
        </java>
    </target>
</project>
